//// 조건문에 대한 실습 - if ~else 구분의 한계점
//
//
//#include <iostream>
//#include <stdio.h>
//
//using namespace std;
//
//int main(void)
//{
//	char ch = ' ';
//	cout << "알파벳 하나를 입력하세요 : ";
//	cin >> ch;
//
//	//알파벳이 대문자인지 판별하는 조건
//	//숫자입력시에도 아스키 코드에 따른 숫자 조건에 부합 --> 틀림
//
//	// if ~else 문의 한계점 해결법
//	//입력한 값이 알파벳 문자이거나, 혹은 소문자가 아니라면
//	//사용자의 실수로 인한 입력을 방지하는 코드 (예외 처리)
//	if (!(ch >= 'A' && ch <= 'Z') && !(ch >= 'a' && ch <= 'z'))
//	{
//		cout << "알파벳이 아닙니다." << endl;
//		cout << "프로그램을 종료합니다." << endl;
//		return 0; //함수는 return문을 만나면 자동 종료가 됩니다. 
//	}
//
//
//	if (ch >= 'A' && ch <= 'Z')
//	{
//		cout << "입력한 알파벳 " << ch << "는(은) \'대문자\' 입니다" << endl;
//		printf("아스키 코드 : %d 입니다 --C \n", ch);
//		cout << "입력한 알파벳" << ch << "의 아스키 코드는 " << int(ch) << "입니다. --C++" << endl;
//	}
//	else
//	{
//		cout << "입력한 알파벳 " << ch << "는(은) \'소문자\' 입니다" << endl;
//		cout << "입력한 알파벳 " << ch << "의 아스키 코드는 " << int(ch) << "입니다. --C++" << endl;
//	}
//
//	//if ~else 구문에서 혹여 사용자의 실수로 알파벳이 입력이 되질 않는다면, 무조건
//	//else구문으로 넘어가서 해당하는 명령어들이 실행된다. 이게 바로 if~else 구문의 한계점
//
//	return 0;
//}